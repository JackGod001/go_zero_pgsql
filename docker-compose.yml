networks:
  go_zero_pgsql:
    external: true
services:  # 定义服务
  uapi:  # API 服务配置 代码变更
    build:  # 构建配置
#      构建时的上下文目录,没生成Dockerfile的时候就是go.mod文件目录,goctl生成的dockerfile在以go.mod的目录生成构建命令需要
      context: ./app/user_center
    # 指向user_center的Dockerfile,这个路径根据上面context: ./app/user_center找到 dockerfile
      dockerfile: ./Dockerfile
    container_name: ${APP_NAME}_api  # 设置容器名称,使用环境变量 APP_NAME
    environment:  # 设置环境变量
      - TZ=Asia/Shanghai  # 设置时区为上海
      - GOPROXY=https://goproxy.cn,direct  # 设置 Go 代理
      - DEBUG_SERVICE_PATH=/go/go_zero_dashboard_base/data/server  # 设置调试服务路径
      - DB_HOST=postgres  # 设置数据库主机为 postgres 服务
      - DB_PORT=${POSTGRESQL_PORT}  # 设置数据库端口
      - DB_USER=${DB_USER}  # 设置数据库用户名
      - DB_PASSWORD=${DB_PASSWORD}  # 设置数据库密码
      - USER_DB_NAME=${USER_DB_NAME}  # 用户数据库的数据库名
      - ORDER_DB_NAME=${ORDER_DB_NAME}  # 订单数据库的数据名\
      # 这里指的是下面定义的服务名 redis,如果有多个服务,需要配置多个变量
      - REDIS1_HOST=redis
      # redis服务内部端口
      - REDIS1_PORT=${REDIS1_PORT}
      - REDIS1_PASSWORD=${REDIS1_PASSWORD} # 设置redis密码
      - GO_ZEOR_MODE=pro  # go-zero环境 mode
      - GO_ZEOR_LOG_LEVEL=error  # go-zero 日志级别
    privileged: true  # 给予容器特权模式
    restart: always  # 容器退出时总是重启
#    volumes:
#      - ./bin:/app
    networks:  # 网络配置
      - go_zero_pgsql
    # 只是说明端口暴露，实际上并没有暴露给主机
#    expose:
#      - "8888"
    # 不需要暴露给主机,通过nginx 代理 nginx配置中转发到api服务监听的端口
    ports:  # 端口映射
      - "8888:1004"  # 将容器的应用监听端口 1004 端口映射到主机的 8888端口,主机可以直接访问8888端口进行请求
    depends_on:  # 依赖关系
      - postgres  # 依赖于 postgres 服务
      - redis
  redis:
    extends:
      file: docker-compose-env.yml
      service: redis
  postgres:
    extends:
      file: docker-compose-env.yml
      service: postgres
  gateway: # Nginx 网关服务配置
    image: nginx:1.21.5  # 使用 Nginx 1.21.5 版本的官方镜像
    container_name: ${APP_NAME}_nginx_dev  # 设置容器名称,使用环境变量 APP_NAME
    restart: always  # 容器退出时总是重启
    environment: # 设置环境变量
      - TZ=Asia/Shanghai  # 设置时区为上海
    ports: # 端口映射
      - 8887:8887  # 将容器的 8887 端口映射到主机的 8887 端口
    volumes: # 配置数据卷
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d  # 挂载 Nginx 配置文件
      - ./logs/nginx:/var/log/nginx  # 挂载 Nginx 日志目录
    networks: # 网络配置
      - go_zero_pgsql
    depends_on:
      #      必须依赖于api服务,否则会报错502
      - uapi
